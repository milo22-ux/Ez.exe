--[[made by _milo22 on dsicord well know for making cheats and cheating on trident survival (2023) or trident survival v5 if you want to skid this cheat then pls give me credit if not then i will not be happy bit that will be fine with me i would do nothing about it anyways but i would be happy if u atleast gave me credit but if not that is complty fine btw i am 15 and taken so don't dm me to date you peace out]]--

local modules = {}
for _, v in ipairs(getgc(true)) do
    if typeof(v) == "function" and islclosure(v) then
        local src = debug.info(v, "s")
        local name = debug.info(v, "n")
        if src:find(".BowSpecial") and name == "update" then
            modules.Character = debug.getupvalue(v, 13)
            modules.Camera = debug.getupvalue(v, 15)
            modules.Network = debug.getupvalue(v, 19)
        elseif src:find(".Character") and name == "getGroundCastResult" then
            modules.FPS = debug.getupvalue(v, 2)
            modules.FPS2 = debug.getupvalue(v, 3)
        elseif src:find(".Character") and name == "updateCharacter" then
            modules.Player  = debug.getupvalue(v, 4)
            modules.Player2 = debug.getupvalue(v, 6)
            modules.Player3 = debug.getupvalue(v, 14)
            modules.Player4 = debug.getupvalue(v, 15)
            modules.Player5 = debug.getupvalue(v, 21)
            modules.Player6 = debug.getupvalue(v, 28)
            modules.Player7 = debug.getupvalue(v, 32)
        end
    end
end
--
local OsClock = os.clock()
local drawing = getgenv().Drawing
local workspace,camera = cloneref(game:GetService("Workspace")),workspace.CurrentCamera
local UIS, RS, ReplicatedStorage = cloneref(game:GetService("UserInputService")), cloneref(game:GetService("RunService")), cloneref(game:GetService("ReplicatedStorage"))


-- Locals to call the ui
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()
--
local window = DrRayLibrary:Load("Ez bans.exe", "Default")
-- Combat
local tab = DrRayLibrary.newTab("Combat", "ImageIdHere")
tab.newButton("silent aim", "", function()
local modules = { ["Camera"] = {}, ["Player"] = {}, ["Character"] = {}, ["Inventory"] = {}, ["RangedWeapon"] = {}, ["BowSpecial"] = {}, ["FPS"] = {}, ["NetWork"] = {}, ["ClimbingPick"] = {}, ["BuildingTool"] = {}, ["Consumable"] = {}, ["Melee"] = {}, ["MiningDrill"] = {}, ["PlaceEntity"] = {}, ["PortableAnvil"] = {}, ["PortableWorkbench"] = {}, ["InputManager"] = {}, ["Particle"] = {}, ["Settings"] = {}, ["Sound"] = {}, ["UI"] = {}, }
for _, v in pairs(getgc(true)) do if typeof(v) == "function" and islclosure(v) then local info = debug.getinfo(v) local name = string.match(info.short_src, "%.([%w_]+)$") if name and modules[name] and info.name ~= nil then modules[name][info.name] = info.func end end end
local workspace,camera = cloneref(game:GetService("Workspace")), workspace.CurrentCamera
local UIS, RS, ReplicatedStorage = cloneref(game:GetService("UserInputService")), cloneref(game:GetService("RunService")), cloneref(game:GetService("ReplicatedStorage"))
local Fov, Sline = Drawing.new("Circle"), Drawing.new("Line")
local screenSize = camera.ViewportSize
local screenCenter = Vector2.new(screenSize.X / 2, screenSize.Y / 2)
Fov.Position = screenCenter Fov.Radius = 150 Fov.Color = Color3.fromRGB(255, 0, 255) Fov.Visible = true Sline.Color = Color3.fromRGB(255, 255, 255) Sline.Thickness = 1 Sline.Visible = true Sline.ZIndex = 1
local getclosest = function() local closestModel, closestData = nil, nil local closestMagnitude = math.huge local camera = workspace.CurrentCamera for _, v in pairs(debug.getupvalue(modules.Player.GetPlayerModel, 1) or {}) do if v.model:FindFirstChild("Head") and not v.sleeping then local pos, onScreen = camera:WorldToViewportPoint(v.model:GetPivot().Position) if onScreen then local magnitude = (Vector2.new(pos.X, pos.Y) - screenCenter).Magnitude local playerDistance = (workspace.Ignore.LocalCharacter.Middle:GetPivot().Position - v.model:GetPivot().Position).Magnitude if magnitude < Fov.Radius and playerDistance <= 9999 and magnitude < closestMagnitude then closestMagnitude = magnitude closestModel = v.model closestData = v end end end end return closestModel, closestData end
game:GetService("RunService").RenderStepped:Connect(function() getgenv().SilentTarget = getclosest() if getgenv().SilentTarget and getgenv().SilentTarget:FindFirstChild("Head") then local head_pos = getgenv().SilentTarget.Head.Position local screenPos, onScreen = camera:WorldToViewportPoint(head_pos) if onScreen then Sline.From = screenCenter Sline.To = Vector2.new(screenPos.X, screenPos.Y) Sline.Visible = true else Sline.Visible = false end else Sline.Visible = false end end)
local RunService, UserInputService, hue, speed = game:GetService("RunService"), game:GetService("UserInputService"), 0, 0.7 RunService.RenderStepped:Connect(function(dt) hue = (hue + (dt * speed * 100)) % 360 Fov.Color = Color3.fromHSV(hue / 360, 1, 1) end)  
local ProjectileDrop = function() local mod = modules.FPS.GetEquippedItem() if not mod or not mod.id then return 0, 0 end local itemConfig = require(game:GetService("ReplicatedStorage").ItemConfigs[mod.id]) return mod.id, itemConfig.ProjectileSpeed, itemConfig.ProjectileDrop end
local predict = function(p, e, s, d) local dt = (e - p).Magnitude local x = (math.pi * 2 - math.pi / 4) / 8 local t = dt / s local py = e.Y + (x * d * t) return Vector3.new(e.X, py, e.Z) end
local SilentAim = true
local oldfromOrientation; oldfromOrientation = hookfunction(CFrame.fromOrientation, newcclosure(function(p, y, r)
    if SilentAim and getgenv().SilentTarget and debug.info(3, "n") == "fire" then
        local id, speed, drop = ProjectileDrop()
        local targetHead = getgenv().SilentTarget.Head
        if targetHead then
            local origin = modules.Camera.GetCFrame()
            local Camera = game.workspace.CurrentCamera
            local cameraPosition = Camera.CFrame.Position
            local predictedPos = predict(origin.Position, targetHead.Position, speed, drop)
            if predictedPos then
                return Camera.CFrame:Inverse() * CFrame.lookAt(cameraPosition, predictedPos)
            end
        end
    end
    return oldfromOrientation(p, y, r)
end))
end)
--
tab.newToggle("Toggle hbe", "Toggle hbe (hitbox expander)", true, function(toggleState)
    Hitbox = toggleState 
end) 
tab.newSlider("hitbox size", "hitbox expander slider", 10, false, function(num)
    headsize = num
end)
--
local function modifyPlayerHeads()
    for i, v in next, game.Workspace:GetChildren() do
        if v:IsA("Model") and v:FindFirstChild("Head") then
            local head = v.Head
            if head then
                local success, _ = pcall(function()
                    head.Size = Vector3.new(headsize, headsize, headsize)
                    head.Transparency = 0.5
                    head.CanCollide = false 
                end)
                if not success then
                    warn("Failed to modify head for player:", v.Name)
                end
            end
        end
    end
end
--
game:GetService("RunService").RenderStepped:Connect(function()
    if Hitbox then
        modifyPlayerHeads()
    end
end)
-- Visuals
local tab = DrRayLibrary.newTab("visuals", "ImageIdHere")
tab.newButton("esp", "", function()
wait(0.1)
repeat
    wait(0.1)
until game:IsLoaded()

wait(0.5)

local Cache = {}
local Cache2 = {}
local CornerBoxes = true
local WeaponType = true
local Names = true
local Bar = true
local MaxDistance = 1500
local PlayerList = debug.getupvalue(modules.Player3.GetPlayerModel, 1)
--
local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui") if playerGui:FindFirstChild("XDEDEADEDE") then playerGui.XDEDEADEDE:Destroy() end
--
local Beamed = { Varis = { RunService = game:GetService("RunService"), Camera = game:GetService("Workspace").CurrentCamera, Lighting = game:GetService("Lighting"), UserInput = game:GetService("UserInputService"), LogService = game:GetService("LogService"), }, }
--
local BeamVar = Beamed.Varis
local VisibilityState = {}
local BarValue = 100 
--
local function CreateClass(Class, Properties) local ClassInt = typeof(Class) == "string" and Instance.new(Class) or Class for Property, Value in next, Properties do ClassInt[Property] = Value end return ClassInt end
--
local XDEDEADEDE = CreateClass("ScreenGui", {Parent = playerGui, Name = "XDEDEADEDE"})
--
local function DupeCheck(name) local existingESP = XDEDEADEDE:FindFirstChild(name) if existingESP then existingESP:Destroy() end end
--
local function IsSleeping(model) if model and model:FindFirstChild("AnimationController") and model.AnimationController:FindFirstChild("Animator") then for _, v in pairs(model.AnimationController.Animator:GetPlayingAnimationTracks()) do if v.Animation.AnimationId == "rbxassetid://13280887764" then return true end end end return false end
--
local function Calc(d, maxDistance) return 4 - math.clamp(d / (maxDistance or 200), 0, 1) * 3 end
--
local function ESP(playertable) if not playertable then return end local model = playertable.model local humanoidRootPart = model:FindFirstChild("HumanoidRootPart") if not humanoidRootPart then return end
    --
    DupeCheck(model.Name)
    --
    local function CreateCornerBox(name, position, size, anchorPoint)
        return CreateClass("Frame", {Parent = XDEDEADEDE, Name = name, BackgroundColor3 = Color3.fromRGB(161,0,219), Position = position, Size = size, AnchorPoint = anchorPoint, Visible = CornerBoxes, ZIndex = 10})
    end
    --
    local function CreateBar(name, position, size)
        return CreateClass("Frame", {Parent = XDEDEADEDE, Name = name, BackgroundColor3 = Color3.fromRGB(255, 255, 255), Position = position, Size = size, Visible = Bar, ZIndex = 11})
    end
    --
    local function CreateBarBackRound(name, position, size)
        return CreateClass("Frame", {Parent = XDEDEADEDE, Name = name, BackgroundColor3 = Color3.fromRGB(0, 0, 0), Position = position, Size = size, Visible = Bar, ZIndex = 9})
    end
    --
    local LeftTop = CreateCornerBox("LeftTop", UDim2.new(0, 0, 0, 0), UDim2.new(0, 0, 0, 1), Vector2.new(0, 0))
    local LeftSide = CreateCornerBox("LeftSide", UDim2.new(0, 0, 0, 0), UDim2.new(0, 1, 0, 0), Vector2.new(0, 0))
    local RightTop = CreateCornerBox("RightTop", UDim2.new(0, 0, 0, 0), UDim2.new(0, 0, 0, 1), Vector2.new(0, 0))
    local RightSide = CreateCornerBox("RightSide", UDim2.new(0, 0, 0, 0), UDim2.new(0, 1, 0, 0), Vector2.new(0, 0))
    local BottomSide = CreateCornerBox("BottomSide", UDim2.new(0, 0, 0, 0), UDim2.new(0, 1, 0, 0), Vector2.new(0, 0))
    local BottomDown = CreateCornerBox("BottomDown", UDim2.new(0, 0, 0, 0), UDim2.new(0, 0, 0, 1), Vector2.new(0, 0))
    local BottomRightSide = CreateCornerBox("BottomRightSide", UDim2.new(0, 0, 0, 0), UDim2.new(0, 1, 0, 0), Vector2.new(0, 0))
    local BottomRightDown = CreateCornerBox("BottomRightDown", UDim2.new(0, 0, 0, 0), UDim2.new(0, 0, 0, 1), Vector2.new(0, 0))
    local NameTag = CreateClass("TextLabel", {Parent = XDEDEADEDE, Name = "NameTag", BackgroundTransparency = 1, Font = Enum.Font.Code, TextColor3 = Color3.fromRGB(161,0,219), TextStrokeTransparency = 0, TextSize = 11, TextStrokeColor3 = Color3.fromRGB(0, 0, 0), Size = UDim2.new(0, 100, 0, 20), AnchorPoint = Vector2.new(0.5, 0), Position = UDim2.new(0.5, 0, 0, 0), Visible = Names})
    local WeaponText = CreateClass("TextLabel", { Parent = XDEDEADEDE, Name = "WeaponText", BackgroundTransparency = 1, Font = Enum.Font.Code, TextColor3 = Color3.fromRGB(161,0,219), TextStrokeTransparency = 0, TextSize = 11, TextStrokeColor3 = Color3.fromRGB(0, 0, 0), Size = UDim2.new(0, 100, 0, 20), AnchorPoint = Vector2.new(0.5, 0), Position = UDim2.new(0.5, 0, 0, 20), Visible = WeaponType})
    local BarBackRound = CreateBarBackRound("BarBackRound", UDim2.new(0, 0, 0, 0), UDim2.new(0, 8, 0, 100))
    local Bar = CreateBar("Bar", UDim2.new(0, 0, 0, 0), UDim2.new(0, 0, 0, 0))
    local UIGradient = CreateClass("UIGradient", {Parent = Bar, Name = "UIGradient", Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(9, 255, 0)), ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 238, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 4))}), Rotation = 90})
    local Connection
    Connection = BeamVar.RunService.RenderStepped:Connect(function()
        if model and model.Parent and humanoidRootPart and humanoidRootPart.Parent then
            if IsSleeping(model) then
                LeftTop.Visible = false
                LeftSide.Visible = false
                BottomSide.Visible = false
                BottomDown.Visible = false
                RightTop.Visible = false
                RightSide.Visible = false
                BottomRightSide.Visible = false
                BottomRightDown.Visible = false
                NameTag.Visible = false
                WeaponText.Visible = false
                BarBackRound.Visible = false
                Bar.Visible = false
                return
            end
            --
            local Pos, OnScreen = BeamVar.Camera:WorldToScreenPoint(humanoidRootPart.Position)
            local Size = humanoidRootPart.Size.Y
            local distance = math.floor((BeamVar.Camera.CFrame.Position - humanoidRootPart.Position).magnitude)
            local scaleFactor = 12 / (Pos.Z * math.tan(math.rad(BeamVar.Camera.FieldOfView * 0.5)) * 2) * 100
            local w, h = 3 * scaleFactor, 4.5 * scaleFactor
            local HealthWidth = Calc(distance)
            local WeaponFound = playertable.equippedItem and playertable.equippedItem.id or "None"
            --
            if OnScreen then
                LeftTop.Position = UDim2.new(0, Pos.X - w / 2, 0, Pos.Y - h / 2)
                LeftTop.Size = UDim2.new(0, w / 5, 0, 1)

                LeftSide.Position = UDim2.new(0, Pos.X - w / 2, 0, Pos.Y - h / 2)
                LeftSide.Size = UDim2.new(0, 1, 0, h / 5)

                BottomSide.Position = UDim2.new(0, Pos.X - w / 2, 0, Pos.Y + h / 2 - h / 5)
                BottomSide.Size = UDim2.new(0, 1, 0, h / 5)

                BottomDown.Position = UDim2.new(0, Pos.X - w / 2, 0, Pos.Y + h / 2)
                BottomDown.Size = UDim2.new(0, w / 5, 0, 1)

                RightTop.Position = UDim2.new(0, Pos.X + w / 2 - w / 5, 0, Pos.Y - h / 2)
                RightTop.Size = UDim2.new(0, w / 5, 0, 1)

                RightSide.Position = UDim2.new(0, Pos.X + w / 2 - 1, 0, Pos.Y - h / 2)
                RightSide.Size = UDim2.new(0, 1, 0, h / 5)

                BottomRightSide.Position = UDim2.new(0, Pos.X + w / 2 - 1, 0, Pos.Y + h / 2 - h / 5)
                BottomRightSide.Size = UDim2.new(0, 1, 0, h / 5)

                BottomRightDown.Position = UDim2.new(0, Pos.X + w / 2 - w / 5, 0, Pos.Y + h / 2)
                BottomRightDown.Size = UDim2.new(0, w / 5, 0, 1)

                NameTag.Position = UDim2.new(0, Pos.X, 0, Pos.Y - h / 2 - 20)
                WeaponText.Position = UDim2.new(0, Pos.X, 0, Pos.Y + h / 2 + 3)

                BarBackRound.Position = UDim2.new(0, Pos.X - w / 2 - 10, 0, Pos.Y - h / 2)
                BarBackRound.Size = UDim2.new(0, HealthWidth, 0, h)

                local barHeight = (BarValue / 100) * h
                Bar.Position = UDim2.new(0, Pos.X - w / 2 - 10, 0, Pos.Y + h / 2 - barHeight)
                Bar.Size = UDim2.new(0, HealthWidth, 0, barHeight)      
                
                local username = model:FindFirstChild("Head") and model.Head:FindFirstChild("Nametag") and model.Head.Nametag.tag.Text or "Player"
                NameTag.Text = (username or "Player") .. " [" .. distance .. "s]"

                WeaponText.Text = "[" .. (WeaponFound:upper() or "Hands") .. "]"

                local color = VisibilityState[model] and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(161, 0, 219)

                LeftTop.BackgroundColor3 = color
                LeftSide.BackgroundColor3 = color
                RightTop.BackgroundColor3 = color
                RightSide.BackgroundColor3 = color
                BottomSide.BackgroundColor3 = color
                BottomDown.BackgroundColor3 = color
                BottomRightSide.BackgroundColor3 = color
                BottomRightDown.BackgroundColor3 = color
                NameTag.TextColor3 = color
                WeaponText.TextColor3 = color

                LeftTop.Visible = CornerBoxes
                LeftSide.Visible = CornerBoxes
                RightTop.Visible = CornerBoxes
                RightSide.Visible = CornerBoxes
                BottomSide.Visible = CornerBoxes
                BottomDown.Visible = CornerBoxes
                BottomRightSide.Visible = CornerBoxes
                BottomRightDown.Visible = CornerBoxes
                NameTag.Visible = Names
                WeaponText.Visible = WeaponType
                BarBackRound.Visible = Bar
                Bar.Visible = Bar
            else
                LeftTop.Visible = false
                LeftSide.Visible = false
                BottomSide.Visible = false
                BottomDown.Visible = false
                RightTop.Visible = false
                RightSide.Visible = false
                BottomRightSide.Visible = false
                BottomRightDown.Visible = false
                NameTag.Visible = false
                WeaponText.Visible = false
                BarBackRound.Visible = false
                Bar.Visible = false
            end
        else
            LeftTop.Visible = false
            LeftSide.Visible = false
            RightTop.Visible = false
            RightSide.Visible = false
            BottomSide.Visible = false
            BottomDown.Visible = false
            BottomRightSide.Visible = false
            BottomRightDown.Visible = false
            NameTag.Visible = false
            WeaponText.Visible = false
            BarBackRound.Visible = false
            Bar.Visible = false
        end

        if not model then
            LeftTop:Destroy()
            LeftSide:Destroy()
            RightTop:Destroy()
            RightSide:Destroy()
            BottomSide:Destroy()
            BottomDown:Destroy()
            BottomRightSide:Destroy()
            BottomRightDown:Destroy()
            NameTag:Destroy()
            WeaponText:Destroy()
            BarBackRound:Destroy()
            Bar:Destroy()
            if Connection then
                Connection:Disconnect()
            end
        end
    end)
end

local barValueIncrementTime = 5
local resetBarValueTime = 1
local lastIncrementTime = 0
local lastResetTime = 0

local function IncrementBarValue()
    if BarValue < 100 then
        BarValue = math.min(BarValue + 1, 100)
    end
end

local function ResetLowBarValue()
    if BarValue <= 1 then
        BarValue = 100
    end
end

local function onLogMessage(message)
    local HealthAfr = message:match("->(%d+%.?%d*)hp")
    if HealthAfr then
        BarValue = math.floor(tonumber(HealthAfr))
    end
end

BeamVar.LogService.MessageOut:Connect(onLogMessage)

game:GetService("RunService").Heartbeat:Connect(function()
    local currentTime = tick()
    if currentTime - lastIncrementTime >= barValueIncrementTime then
        IncrementBarValue()
        lastIncrementTime = currentTime
    end
    if currentTime - lastResetTime >= resetBarValueTime then
        ResetLowBarValue()
        lastResetTime = currentTime
    end
end)

local Cache = {}
for i,v in pairs(PlayerList) do
    if v.model:FindFirstChild("HumanoidRootPart") and not table.find(Cache, v) then
        table.insert(Cache, v)
        ESP(v)
    end
end

game:GetService("Workspace").ChildAdded:Connect(function()
    task.delay(1.5, function()
        for i,v in pairs(PlayerList) do
            if v.model:FindFirstChild("HumanoidRootPart") and not table.find(Cache, v) then
                table.insert(Cache, v)
                ESP(v)
            end
        end
    end)
end)
end)
-- Xray
local antixra
