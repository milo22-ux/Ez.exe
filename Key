local keys_url  = "https://pastebin.com/raw/ZwL9ABFQ"
local hwids_url = "https://pastebin.com/raw/UgeF3gJ3"

local function fetch(u)
    if syn and syn.request then
        local r = syn.request({Url = u, Method = "GET"})
        return r and (r.Body or r.body)
    elseif http and http.request then
        local r = http.request({Url = u, method = "GET"})
        return r and (r.Body or r.body)
    elseif request then
        local r = request({Url = u, Method = "GET"})
        return r and (r.Body or r.body)
    elseif game and game.HttpGet then
        return game:HttpGet(u, true)
    end
    return ""
end

local function split_lines(t)
    local out = {}
    for line in (t or ""):gmatch("[^\r\n]+") do
        line = line:match("^%s*(.-)%s*$")
        if line ~= "" then table.insert(out, line) end
    end
    return out
end

local keys  = split_lines(fetch(keys_url))
local hwids = split_lines(fetch(hwids_url))

local key  = (type(getfenv) == "function" and getfenv().key) or _G.key
local hwid = gethwid()

local key_ok, hwid_ok = false, false

for _, k in ipairs(keys) do
    if k == key then
        key_ok = true
        break
    end
end

for _, h in ipairs(hwids) do
    if h == hwid then
        hwid_ok = true
        break
    end
end

if key_ok and hwid_ok then
    print("whitelisted")
else
    print("not whitelisted")
    if not key_ok then
        print("Reason: Key is invalid or missing")
        if type(getfenv) == "function" then
            getfenv().key = nil
        else
            _G.key = nil
        end
    end
    if not hwid_ok then
        print("Reason: HWID is invalid or missing")
        hwid = nil
    end
end
