local hwid = (gethwid and typeof(gethwid) == "function") and gethwid() or nil
local key = rawget(getgenv(), "key") or ""

local request = request or http_request or (http and http.request) or (syn and syn.request)
if type(request) ~= "function" then error("Request function missing") end
if type(key) ~= "string" or #key < 5 then error("Key not set or too short") end
if type(hwid) ~= "string" or #hwid < 6 then error("Invalid or missing HWID") end

local function parseMessage(body)
    local msg = body:match('"message"%s*:%s*"(.-)"')
    if msg then
        return msg
    else
        return body
    end
end

local function isValidResponse(body)
    local lowerBody = tostring(body):lower()
    if lowerBody:find('"status"%s*:%s*"success"') and lowerBody:find('"message"%s*:%s*"ok"') then
        return true
    else
        local message = parseMessage(body)
        return false, message or "Unknown error"
    end
end

local function getServerResponse(extra)
    local t = os.time()
    local url = ("http://whitelist-ivp4.vercel.app/api/vaildate?key=%s&hwid=%s&t=%s%s"):format(
        key, hwid, t, extra or ""
    )
    local success, response = pcall(function()
        return request({ Url = url, Method = "GET" })
    end)
    if not success or not response or not response.Body then
        error("Failed to contact server")
    end
    return tostring(response.Body)
end

local function runChecks()
    local responses = {}
    for i = 1, 5 do
        local param = i == 3 and ("&keyrev=" .. key:reverse()) or ("&chk=" .. i)
        local body = getServerResponse(param)
        local valid, errMsg = isValidResponse(body)
        if not valid then
            error("Whitelist failed on check " .. i .. ": " .. errMsg)
        end
        responses[i] = body
    end
    for i = 2, #responses do
        if responses[i] ~= responses[1] then
            error("Server responses inconsistent")
        end
    end

    local success, loadErr = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/milo22-ux/Ez.exe/refs/heads/main/Whitelist", true))()
    end)
    if not success then
        error("Failed to load main script: " .. tostring(loadErr))
    end
end

runChecks()
